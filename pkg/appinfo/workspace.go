package appinfo

import (
	"path/filepath"
	"sync"

	"github.com/wuxler/ruasec/pkg/util/homedir"
)

var (
	globalWorkspace = DefaultWorkspace()
	wsMutex         sync.RWMutex
)

// GetWorkspace returns the global workspace directory path.
func GetWorkspace() Workspace {
	wsMutex.RLock()
	defer wsMutex.RUnlock()

	return globalWorkspace
}

// SetWorkspace sets the global workspace directory path, and ignores
// with empty path input.
func SetWorkspace(path string) {
	if path == "" {
		return
	}

	wsMutex.Lock()
	defer wsMutex.Unlock()

	globalWorkspace = Workspace(path)
}

// DefaultWorkspace returns the default workspace directory which
// is `~/.ruasec`
func DefaultWorkspace() Workspace {
	return Workspace(filepath.Join(homedir.MustGet(), ".ruasec"))
}

// Workspace is the path to application workspace directory. All data
// generated by the application should be put into workspace.
type Workspace string

// ConfigDir returns the directory to store config files.
func (w Workspace) ConfigDir() string {
	return filepath.Join(string(w), "config")
}

// TempDir returns the directory to store temporary files.
func (w Workspace) TempDir() string {
	return filepath.Join(string(w), "tmp")
}

// CacheDir returns the directory to store cache files.
func (w Workspace) CacheDir() string {
	return filepath.Join(string(w), "cache")
}
